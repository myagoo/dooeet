{"version":3,"sources":["primitives/Button.js","primitives/View.js","firebase.js","components/Login.js","primitives/Text.js","providers/Theme.js","components/Menu.js","primitives/Input.js","components/Todos.js","App.js","hooks/useAuth.js","serviceWorker.js","index.js"],"names":["BaseButton","createPrimitive","css","borderRadius","minWidth","minHeight","flex","fontWeight","border","fontSize","color","background","cursor","p","opacity","outline","filter","SecondaryButton","extendPrimitive","PrimaryButton","bg","View","props","useGap","display","alignSelf","alignItems","flexDirection","justifyContent","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getRedirectResult","then","result","console","info","catch","error","Login","onClick","provider","auth","GoogleAuthProvider","signInWithRedirect","Text","Title","Hint","as","baseTheme","breakpoints","s","m","l","space","fontSizes","lightTheme","colors","primary","primaryText","lightPrimary","lightPrimaryText","accent","accentText","backgroundText","secondaryBackgroundText","divider","name","darkTheme","ToggleThemeContext","createContext","ThemeProvider","children","useState","theme","setTheme","Provider","value","Menu","useContext","ThemeContext","toggleTheme","gap","FaMoon","FaSun","currentUser","email","signOut","Input","type","borderColor","Todos","pendingText","setPendingText","queryCache","useQueryCache","useQuery","a","database","ref","uid","once","snapshot","log","todos","forEach","childSnapshot","push","key","val","reverse","isLoading","data","useMutation","todo","onSuccess","invalidateQueries","addTodo","isAddTodoLoading","remove","removeTodo","isRemoveTodoLoading","update","updateTodo","handleAddTodo","text","completed","handleRemoveTodo","handleUpdateTodo","handleKeypress","e","persist","trim","target","focus","autoFocus","onChange","disabled","onKeyPress","map","checked","textDecoration","deps","App","initializing","user","state","setState","useEffect","unsubscribe","onAuthStateChanged","useAuth","useGlobalCss","body","fontFamily","transition","height","padding","boxSizing","userSelect","Boolean","window","location","hostname","match","QueryCache","ReactDOM","render","StrictMode","initialIsOpen","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a6056476.chunk.js","sourcesContent":["import { createPrimitive, extendPrimitive } from \"css-system\";\n\nconst BaseButton = createPrimitive(\"button\", {\n  css: {\n    borderRadius: 2,\n    minWidth: 0,\n    minHeight: 0,\n    flex: \"none\",\n    fontWeight: \"bold\",\n    border: \"none\",\n    fontSize: \"inherit\",\n    color: \"inherit\",\n    background: \"none\",\n    cursor: \"pointer\",\n    p: 2,\n    \"&:disabled\": {\n      opacity: 0.3,\n      cursor: \"not-allowed\",\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:active\": {\n      filter: \"invert(1)\",\n    },\n  },\n});\n\nexport const SecondaryButton = extendPrimitive(BaseButton, {\n  css: {\n    border: \"2px solid\",\n    borderRadius: 2,\n  },\n});\n\nexport const PrimaryButton = extendPrimitive(BaseButton, {\n  css: {\n    bg: \"accent\",\n    color: \"accentText\",\n  },\n});\n","import { createPrimitive, useGap } from \"css-system\"\n\nexport const View = createPrimitive(\"div\", ({ css, ...props }) => {\n  return {\n    css: useGap({\n      display: \"flex\",\n      minWidth: 0,\n      minHeight: 0,\n      flex: \"none\",\n      alignSelf: \"auto\",\n      alignItems: \"stretch\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n      ...css,\n    }),\n    ...props,\n  }\n})","// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from 'firebase/app'\n\n// Add the Firebase products that you want to use\nimport 'firebase/auth'\nimport 'firebase/database'\nimport 'firebase/analytics'\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyA8dy0me89LJvHSQ6fIeGxMAgrxMRvIVaQ',\n  authDomain: 'dooeet-a7f63.firebaseapp.com',\n  databaseURL: 'https://dooeet-a7f63.firebaseio.com',\n  projectId: 'dooeet-a7f63',\n  storageBucket: 'dooeet-a7f63.appspot.com',\n  messagingSenderId: '277490811595',\n  appId: '1:277490811595:web:77db5abd685a14ed2d514e',\n  measurementId: 'G-RLVZ0BRR64',\n})\n\nfirebase\n  .auth()\n  .getRedirectResult()\n  .then((result) => {\n    console.info('Auth redirect success', result)\n  })\n  .catch((error) => {\n    console.error('Auth redirect error', error)\n  })\n\nexport default firebase\n","import React from 'react'\nimport { PrimaryButton } from '../primitives/Button'\nimport { View } from '../primitives/View'\nimport firebase from '../firebase'\n\nexport const Login = () => {\n  const handleLoginClick = () => {\n    const provider = new firebase.auth.GoogleAuthProvider()\n    firebase.auth().signInWithRedirect(provider)\n  }\n  return (\n    <View css={{ flex: '1', bg: 'red' }}>\n      <PrimaryButton onClick={handleLoginClick}>Login</PrimaryButton>\n    </View>\n  )\n}\n","import { createPrimitive, extendPrimitive } from 'css-system'\n\nexport const Text = createPrimitive('div', {\n  css: {\n    display: 'inline',\n    minWidth: 0,\n    minHeight: 0,\n    flex: 'none',\n  },\n})\n\nexport const Title = extendPrimitive(Text, {\n  css: {\n    fontSize: 'large',\n    fontWeight: 'bold',\n  },\n})\n\nexport const Hint = extendPrimitive(Text, {\n  as: 'small',\n  css: {\n    opacity: 0.75,\n  },\n})\n","import { ThemeContext } from 'css-system'\nimport React, { createContext, useState } from 'react'\n\nconst baseTheme = {\n  breakpoints: {\n    s: '40em',\n    m: '52em',\n    l: '64em',\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 72],\n}\n\nconst lightTheme = {\n  ...baseTheme,\n  colors: {\n    primary: '#673AB7',\n    primaryText: '#ffffffe0',\n    lightPrimary: '#D1C4E9',\n    lightPrimaryText: '#000000e0',\n    accent: '#FF4081',\n    accentText: '#ffffffe0',\n    background: '#FFFFFF',\n    backgroundText: '#000000e0',\n    secondaryBackgroundText: '#00000080',\n    divider: '#BDBDBD',\n  },\n  name: 'light',\n}\n\nconst darkTheme = {\n  ...baseTheme,\n\n  colors: {\n    primary: '#673AB7',\n    primaryText: '#ffffffe0',\n    lightPrimary: '#D1C4E9',\n    lightPrimaryText: '#212121',\n    accent: '#FF4081',\n    accentText: '#ffffffe0',\n    background: '#212121',\n    backgroundText: '#ffffffe0',\n    secondaryBackgroundText: '#ffffff80',\n    divider: '#BDBDBD',\n  },\n  name: 'dark',\n}\n\nexport const ToggleThemeContext = createContext(() => {})\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(lightTheme)\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <ToggleThemeContext.Provider\n        value={() => setTheme(theme === lightTheme ? darkTheme : lightTheme)}\n      >\n        {children}\n      </ToggleThemeContext.Provider>\n    </ThemeContext.Provider>\n  )\n}\n","import { ThemeContext } from 'css-system'\nimport React, { useContext } from 'react'\nimport { FaMoon, FaSun } from 'react-icons/fa'\nimport firebase from '../firebase'\nimport { SecondaryButton } from '../primitives/Button'\nimport { Hint, Title } from '../primitives/Text'\nimport { View } from '../primitives/View'\nimport { ToggleThemeContext } from '../providers/Theme'\n\nexport const Menu = () => {\n  const theme = useContext(ThemeContext)\n  const toggleTheme = useContext(ToggleThemeContext)\n\n  const handleLogout = () => {\n    firebase.auth().signOut()\n  }\n\n  return (\n    <View\n      css={{\n        flexDirection: 'row',\n        bg: 'primary',\n        color: 'primaryText',\n        p: 3,\n        alignItems: 'baseline',\n        justifyContent: 'space-between',\n      }}\n    >\n      <View\n        css={{\n          flexDirection: 'row',\n          alignItems: 'baseline',\n          gap: 3,\n        }}\n      >\n        <Title css={{ fontWeight: 'bold' }}>DOOEET</Title>\n        <View\n          css={{ cursor: 'pointer' }}\n          as={theme.name === 'light' ? FaMoon : FaSun}\n          onClick={toggleTheme}\n        />\n      </View>\n      <View\n        css={{\n          flexDirection: 'row',\n          alignItems: 'baseline',\n          gap: 3,\n        }}\n      >\n        <Hint>{firebase.auth().currentUser.email}</Hint>\n        <SecondaryButton onClick={handleLogout}>Logout</SecondaryButton>\n      </View>\n    </View>\n  )\n}\n","import { createPrimitive } from \"css-system\"\n\nexport const Input = createPrimitive(\"input\", {\n  type: \"text\",\n  css: {\n    color: \"lightPrimaryText\",\n    fontSize: \"inherit\",\n    bg: \"lightPrimary\",\n    border: \"none\",\n    borderRadius: 2,\n    borderColor: \"currentColor\",\n    p: 2,\n    \"&:disabled\": {\n      opacity: 0.5,\n      cursor: \"not-allowed\",\n    },\n    \"&:focus\": {\n      outline: \"none\",\n    },\n  },\n})\n","import React, { useState } from 'react'\nimport { FaTrash } from 'react-icons/fa'\nimport { useMutation, useQuery, useQueryCache } from 'react-query'\nimport firebase from '../firebase'\nimport { PrimaryButton, SecondaryButton } from '../primitives/Button'\nimport { Input } from '../primitives/Input'\nimport { Text } from '../primitives/Text'\nimport { View } from '../primitives/View'\n\nexport const Todos = () => {\n  const [pendingText, setPendingText] = useState('')\n  const queryCache = useQueryCache()\n\n  const { isLoading, data: todos } = useQuery(\n    'todos',\n    async () =>\n      await firebase\n        .database()\n        .ref(`users/${firebase.auth().currentUser.uid}/todos`)\n        .once('value')\n        .then((snapshot) => {\n          console.log(snapshot)\n          const todos = []\n          snapshot.forEach((childSnapshot) => {\n            todos.push({\n              key: childSnapshot.key,\n              ...childSnapshot.val(),\n            })\n          })\n          return todos.reverse()\n        })\n  )\n\n  const [addTodo, { isLoading: isAddTodoLoading }] = useMutation(\n    async (todo) =>\n      await firebase\n        .database()\n        .ref(`users/${firebase.auth().currentUser.uid}/todos`)\n        .push(todo),\n    {\n      onSuccess: () => {\n        // Query Invalidations\n        queryCache.invalidateQueries('todos')\n      },\n    }\n  )\n\n  const [removeTodo, { isLoading: isRemoveTodoLoading }] = useMutation(\n    async (key) =>\n      await firebase\n        .database()\n        .ref(`users/${firebase.auth().currentUser.uid}/todos/${key}`)\n        .remove(),\n    {\n      onSuccess: () => {\n        // Query Invalidations\n        queryCache.invalidateQueries('todos')\n      },\n    }\n  )\n  const [updateTodo] = useMutation(\n    async ({ key, todo }) =>\n      console.log(todo) ||\n      (await firebase\n        .database()\n        .ref(`users/${firebase.auth().currentUser.uid}/todos/${key}`)\n        .update(todo)),\n    {\n      onSuccess: () => {\n        // Query Invalidations\n        queryCache.invalidateQueries('todos')\n      },\n    }\n  )\n  const handleAddTodo = async () => {\n    await addTodo({ text: pendingText, completed: false })\n    setPendingText('')\n  }\n\n  const handleRemoveTodo = async (key) => {\n    await removeTodo(key)\n  }\n\n  const handleUpdateTodo = async (key, todo) => {\n    await updateTodo({ key, todo })\n  }\n\n  const handleKeypress = async (e) => {\n    e.persist()\n    if (e.key === 'Enter' && pendingText.trim()) {\n      await addTodo({ text: pendingText, completed: false })\n      setPendingText('')\n      e.target.focus()\n    }\n  }\n\n  return isLoading ? (\n    <Text>Loading...</Text>\n  ) : (\n    <View css={{ flex: '1', alignItems: 'center', gap: 3 }}>\n      <View css={{ flexDirection: 'row', gap: 3 }}>\n        <Input\n          autoFocus\n          value={pendingText}\n          onChange={(e) => setPendingText(e.target.value)}\n          disabled={isAddTodoLoading}\n          onKeyPress={handleKeypress}\n        ></Input>\n        <PrimaryButton disabled={isAddTodoLoading} onClick={handleAddTodo}>\n          Add\n        </PrimaryButton>\n      </View>\n      <View css={{ gap: 3 }}>\n        {todos.map((todo) => {\n          return (\n            <View\n              key={todo.key}\n              css={{\n                flexDirection: 'row',\n                gap: '10px',\n                alignItems: 'center',\n              }}\n            >\n              <Input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={() =>\n                  handleUpdateTodo(todo.key, { completed: !todo.completed })\n                }\n                disabled={isAddTodoLoading}\n              ></Input>\n              <Text\n                css={{\n                  textDecoration: todo.completed && 'line-through',\n                }}\n                deps={[todo.completed]}\n              >\n                {todo.text}\n              </Text>\n              <SecondaryButton\n                disabled={isRemoveTodoLoading}\n                onClick={() => handleRemoveTodo(todo.key)}\n              >\n                Delete <FaTrash />\n              </SecondaryButton>\n            </View>\n          )\n        })}\n      </View>\n    </View>\n  )\n}\n","import { useGlobalCss } from 'css-system'\nimport React from 'react'\nimport { Login } from './components/Login'\nimport { Menu } from './components/Menu'\nimport { Todos } from './components/Todos'\nimport { useAuth } from './hooks/useAuth'\nimport { Text } from './primitives/Text'\nimport { View } from './primitives/View'\n\nfunction App() {\n  const { initializing, user } = useAuth()\n\n  useGlobalCss({\n    body: {\n      m: 0,\n      bg: 'background',\n      color: 'backgroundText',\n      fontFamily: `-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\n        \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n        \"Helvetica Neue\", sans-serif`,\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      transition: `background-color 250ms`,\n    },\n    'body, html, #root': {\n      height: '100%',\n    },\n    '#root': {\n      display: 'flex',\n      flexDirection: 'column',\n      padding: `\n        env(safe-area-inset-top, 0)\n        env(safe-area-inset-right, 0)\n        env(safe-area-inset-bottom, 0)\n        env(safe-area-inset-left, 0)\n      `,\n    },\n    '*': {\n      boxSizing: 'border-box',\n      userSelect: 'none',\n      '-moz-user-select': 'none',\n      '-khtml-user-select': 'none',\n      '-webkit-user-select': 'none',\n      '-webkit-tap-highlight-color': 'rgba(0,0,0,0)',\n    },\n    'input, textarea': {\n      '-webkit-user-select': 'initial',\n      '-moz-user-select': 'initial',\n      '-ms-user-select': 'initial',\n      userSelect: 'initial',\n    },\n  })\n\n  if (initializing) {\n    return (\n      <View css={{ flex: '1' }}>\n        <Text>Loading...</Text>\n      </View>\n    )\n  }\n\n  if (!user) {\n    return <Login />\n  }\n\n  return (\n    <View css={{ flex: '1' }}>\n      <Menu />\n      <Todos />\n    </View>\n  )\n}\n\nexport default App\n","import { useEffect, useState } from 'react'\nimport firebase from '../firebase'\n\nexport const useAuth = () => {\n  const [state, setState] = useState({\n    initializing: true,\n    user: null,\n  })\n\n  function onChange(user) {\n    setState({\n      initializing: false,\n      user,\n    })\n  }\n\n  useEffect(() => {\n    // listen for auth state changes\n    const unsubscribe = firebase.auth().onAuthStateChanged(onChange)\n    // unsubscribe to the listener when unmounting\n    return () => unsubscribe()\n  }, [])\n\n  return state\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { QueryCache, ReactQueryCacheProvider } from 'react-query'\nimport { ThemeProvider } from './providers/Theme'\nimport { ReactQueryDevtools } from 'react-query-devtools'\n\nconst queryCache = new QueryCache()\n\nReactDOM.render(\n  <React.StrictMode>\n    <ReactQueryCacheProvider queryCache={queryCache}>\n      <ThemeProvider>\n        <App />\n      </ThemeProvider>\n      <ReactQueryDevtools initialIsOpen />\n    </ReactQueryCacheProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}